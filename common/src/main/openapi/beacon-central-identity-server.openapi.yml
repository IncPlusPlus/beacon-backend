---
openapi: 3.0.1
tags:
  - name: Account Management
    description: Create and edit an account + view account details by ID
info:
  title: Beacon Central Identity Server API
  version: '@version@'
  description: |
    This is the API for the Central Identity Server (CIS) component of the Beacon backend.
    The CIS is responsible for all tasks relating to identity management and user accounts.

servers:
  - url: 'http://localhost:9876'
    description: localhost
  - url: 'https://beacon-backend-main-staging.herokuapp.com'
    description: Main branch
  - url: 'https://beacon-backend-prod.herokuapp.com'
    description: Production

paths:
  '/account/create-new-account':
    post:
      tags: [ Account Management ]
      description: Create a new user account
      operationId: createNewAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      security: []   # No security
      responses:
        '201':
          description: Account created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  '/account/update-profile-picture':
    put:
      tags: [ Account Management ]
      description: Upload a profile picture for the currently signed-in user. This image MUST be a PNG.
      operationId: updateProfilePicture
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                picture:
                  type: string
                  format: binary
      responses:
        '201':
          description: Picture updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  '/account/{user-account-id}':
    parameters:
      - $ref: '#/components/parameters/user-account-id'
    get:
      tags: [ Account Management ]
      description: Get information about the user with the specified ID
      operationId: getAccount
      responses:
        '200':
          description: Ok. Operation successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  '/account/{user-account-id}/profile-picture':
    parameters:
      - $ref: '#/components/parameters/user-account-id'
    get:
      tags: [ Account Management ]
      description: Get the profile picture file of this specific user
      operationId: getProfilePicture
      responses:
        '200':
          description: Ok. Operation successful.
          content:
            image/png:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

#------------------------------------------------------------------------
# Components
#------------------------------------------------------------------------
components:

  #----------------------------------------------------------------------
  # Security Schemes
  #----------------------------------------------------------------------
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  #----------------------------------------------------------------------
  # Parameter
  #----------------------------------------------------------------------
  parameters:
    $ref: "./parameters/_index.yaml"

  #----------------------------------------------------------------------
  # Schema
  #----------------------------------------------------------------------
  schemas:
    $ref: "./schemas/_index.yaml"

  #----------------------------------------------------------------------
  # Response
  #----------------------------------------------------------------------
  responses:
    $ref: "./responses/_index.yaml"

#------------------------------------------------------------------------
# Security
#------------------------------------------------------------------------
security:
  - basicAuth: [ ]