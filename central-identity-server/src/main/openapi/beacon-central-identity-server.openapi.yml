---
openapi: 3.0.1
tags:
  - name: Account Management
    description: Create and edit an account + view account details by ID
info:
  title: Beacon Central Identity Server API
  version: '@version@'
  description: |
    This is the API for the Central Identity Server (CIS) component of the Beacon backend.
    The CIS is responsible for all tasks relating to identity management and user accounts.

servers:
  - url: 'http://localhost:9876'
    description: localhost
  - url: 'https://beacon-backend-main-staging.herokuapp.com:9876'
    description: Main branch
  - url: 'https://beacon-backend-prod.herokuapp.com:9876'
    description: Production

paths:
  '/account/createNewAccount':
    post:
      tags: [ Account Management ]
      description: Create a new user account
      operationId: createNewAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      responses:
        '201':
          description: Account created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  '/account/update-profile-picture':
    put:
      tags: [ Account Management ]
      description: Upload a profile picture for the currently signed-in user.
      operationId: updateProfilePicture
      requestBody:
        content:
          image/*:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: Picture updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  '/account/{user-account-id}/':
    parameters:
      - $ref: '#/components/parameters/user-account-id'
    get:
      tags: [ Account Management ]
      description: Get information about the user with the specified ID
      operationId: getAccount
      responses:
        '200':
          description: Ok. Operation successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'

#------------------------------------------------------------------------
# Components
#------------------------------------------------------------------------
components:

  #----------------------------------------------------------------------
  # Security Schemes
  #----------------------------------------------------------------------
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  #----------------------------------------------------------------------
  # Parameter
  #----------------------------------------------------------------------
  parameters:
    user-account-id:
      name: user-account-id
      in: path
      description: The ID of a user account
      required: true
      schema:
        type: string

  #----------------------------------------------------------------------
  # Schema
  #----------------------------------------------------------------------
  schemas:
    #----------------------------------------------------------------------
    # Shared Types
    #----------------------------------------------------------------------
    ZonedDateTime:
      type: string
      format: date-time
    #----------------------------------------------------------------------
    # Shared Properties
    #----------------------------------------------------------------------

    #----------------------------------------------------------------------
    # Object Schemas
    #----------------------------------------------------------------------
    CreateAccountRequest:
      type: object
      properties:
        email_address:
          description: The email address of the new account. It is required that this username is unique
          type: string
          example: my.name.or.something@gmail.com
        username:
          description: The username of the new account. It is required that this username is unique
          type: string
          example: TheOfficialFancySnail
        password:
          description: The password for the new account
          type: string
          example: BxobetM5yHoICD657VDa0kVb5c8CUT0iYoU
    UserAccount:
      type: object
      properties:
        account_id:
          description: The unique identifier for this account
          type: string
          example: 507f1f77bcf86cd799439011
        email_address:
          description: The email address associated with the user account. If the request is a request for an account that is not the user's, the email address will be null for privacy reasons.
          type: string
          nullable: true
          example: my.name.or.something@gmail.com
        username:
          description: The username associated with the account ID
          type: string
          example: TheOfficialFancySnail
        profile_picture_url:
          description: The location at which the user's profile picture can be found. This may be empty if never set.
          type: string
          example: https://beacon-cis.herokuapp.com/pfps/507f1f77bcf86cd799439011.png


  #----------------------------------------------------------------------
  # Response
  #----------------------------------------------------------------------
  responses:
    # 400
    BadRequest:
      description: Bad Request.
      content:
        application/problem+json:
          schema:
            $ref: 'https://opensource.zalando.com/restful-api-guidelines/problem-1.0.1.yaml#/Problem'

    # 404
    NotFound:
      description: Not Found.
      content:
        application/problem+json:
          schema:
            $ref: 'https://opensource.zalando.com/restful-api-guidelines/problem-1.0.1.yaml#/Problem'

    # 500
    ServerError:
      description: Internal Server Error.
      content:
        application/problem+json:
          schema:
            $ref: 'https://opensource.zalando.com/restful-api-guidelines/problem-1.0.1.yaml#/Problem'